<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AStar.Dev.AspNet.Extensions</name>
    </assembly>
    <members>
        <member name="T:AStar.Dev.AspNet.Extensions.ApiConfiguration">
            <summary>
                The <see cref="T:AStar.Dev.AspNet.Extensions.ApiConfiguration" /> class which is used to load the Api Configuration
            </summary>
        </member>
        <member name="F:AStar.Dev.AspNet.Extensions.ApiConfiguration.ConfigurationSectionName">
            <summary>
                The static Configuration Section Name which controls where DI looks for the API Configuration
            </summary>
        </member>
        <member name="P:AStar.Dev.AspNet.Extensions.ApiConfiguration.OpenApiInfo">
            <summary>
                The <see cref="P:AStar.Dev.AspNet.Extensions.ApiConfiguration.OpenApiInfo" /> used to configure Swagger
            </summary>
        </member>
        <member name="T:AStar.Dev.AspNet.Extensions.ConfigurationManagerExtensions.ConfigurationManagerExtensions">
            <summary>
                The <see cref="T:AStar.Dev.AspNet.Extensions.ConfigurationManagerExtensions.ConfigurationManagerExtensions" /> contains the current extensions for the
                <see cref="T:Microsoft.Extensions.Configuration.ConfigurationManager" /> class from Microsoft.
            </summary>
        </member>
        <member name="M:AStar.Dev.AspNet.Extensions.ConfigurationManagerExtensions.ConfigurationManagerExtensions.GetValidatedConfigurationSection``1(Microsoft.Extensions.Configuration.IConfigurationManager,System.String)">
            <summary>
                The GetValidatedConfigurationSection will retrieve the specified configuration settings and return the requested
                configuration object.
            </summary>
            <param name="configuration">The instance of <see cref="T:Microsoft.Extensions.Configuration.IConfigurationManager" /> to configure</param>
            <param name="configurationSectionKey">The name of the configuration section to map</param>
            <typeparam name="T">The type of the configuration settings to configure and return</typeparam>
            <returns>The original <see cref="T:Microsoft.Extensions.Configuration.IConfigurationManager" /> to facilitate further call chaining</returns>
        </member>
        <member name="T:AStar.Dev.AspNet.Extensions.Handlers.GlobalExceptionHandler">
            <summary>
                The <see ref="GlobalExceptionMiddleware"></see> class contains the code to process any unhandled exceptions in a
                consistent, cross-solution, approach.
            </summary>
            <param name="logger">
                An instance of <see href="ILogger"></see> used to log the error.
            </param>
        </member>
        <member name="M:AStar.Dev.AspNet.Extensions.Handlers.GlobalExceptionHandler.#ctor(Microsoft.Extensions.Logging.ILogger{AStar.Dev.AspNet.Extensions.Handlers.GlobalExceptionHandler})">
            <summary>
                The <see ref="GlobalExceptionMiddleware"></see> class contains the code to process any unhandled exceptions in a
                consistent, cross-solution, approach.
            </summary>
            <param name="logger">
                An instance of <see href="ILogger"></see> used to log the error.
            </param>
        </member>
        <member name="M:AStar.Dev.AspNet.Extensions.Handlers.GlobalExceptionHandler.TryHandleAsync(Microsoft.AspNetCore.Http.HttpContext,System.Exception,System.Threading.CancellationToken)">
            <summary>
                The TryHandleAsync as defined by the <see cref="T:Microsoft.AspNetCore.Diagnostics.IExceptionHandler" /> interface.
            </summary>
            <param name="httpContext">
                The <see cref="T:Microsoft.AspNetCore.Http.HttpContext" /> for the current request.
            </param>
            <param name="exception">
                The unhandled exception.
            </param>
            <param name="cancellationToken">
                The <see cref="T:System.Threading.CancellationToken" /> that the framework will pass to the method.
            </param>
            <returns>
                An instance of <see cref="T:System.Boolean" /> of type <see cref="T:Microsoft.AspNetCore.Diagnostics.IExceptionHandler" /> as defined by the
                <see cref="T:Microsoft.AspNetCore.Http.HttpContext" /> interface.
            </returns>
        </member>
        <member name="T:AStar.Dev.AspNet.Extensions.PipelineExtensions.PipelineExtensions">
            <summary>
                The <see cref="N:AStar.Dev.AspNet.Extensions.ServiceCollectionExtensions" /> class contains the method(s) available to configure the pipeline in
                a consistent manner.
            </summary>
        </member>
        <member name="M:AStar.Dev.AspNet.Extensions.PipelineExtensions.PipelineExtensions.UseApiServices(Microsoft.AspNetCore.Builder.WebApplication,System.Boolean)">
            <summary>
                The <see cref="M:AStar.Dev.AspNet.Extensions.PipelineExtensions.PipelineExtensions.UseApiServices(Microsoft.AspNetCore.Builder.WebApplication,System.Boolean)" /> will configure the pipeline to include Swagger, Authentication, Authorisation
                and basic live/ready health check endpoints
            </summary>
            <param name="app">
                The instance of the <see cref="T:Microsoft.AspNetCore.Builder.WebApplication" /> to configure.
            </param>
            <param name="enableSwaggerDarkMode">Controls whether to enable Swagger-UI Dark Mode. The default is: true</param>
            <returns>
                The instance of the <see cref="T:Microsoft.AspNetCore.Builder.WebApplication" /> to facilitate chaining.
            </returns>
        </member>
        <member name="T:AStar.Dev.AspNet.Extensions.RootEndpoint.RootEndpointConfiguration">
            <summary>
                The <see cref="T:AStar.Dev.AspNet.Extensions.RootEndpoint.RootEndpointConfiguration" /> class
            </summary>
        </member>
        <member name="M:AStar.Dev.AspNet.Extensions.RootEndpoint.RootEndpointConfiguration.ConfigureRootPage(Microsoft.AspNetCore.Builder.WebApplication,System.String)">
            <summary>
                The ConfigureRootPage method will override the default API root to display an HTML page instead.
            </summary>
            <param name="app">The <see cref="T:Microsoft.AspNetCore.Builder.WebApplication" /> being extended</param>
            <param name="apiOrApplicationName">The API or Application name to use when returning the page</param>
            <returns>The original <see cref="T:Microsoft.AspNetCore.Builder.WebApplication" /> to enable further method chaining</returns>
        </member>
        <member name="T:AStar.Dev.AspNet.Extensions.ServiceCollectionExtensions.ServiceCollectionExtensions">
            <summary>
                The <see cref="T:AStar.Dev.AspNet.Extensions.ServiceCollectionExtensions.ServiceCollectionExtensions" /> class contains the method(s) available to configure the pipeline in
                a consistent manner
            </summary>
        </member>
        <member name="M:AStar.Dev.AspNet.Extensions.ServiceCollectionExtensions.ServiceCollectionExtensions.ConfigureUi(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                The <see cref="M:AStar.Dev.AspNet.Extensions.ServiceCollectionExtensions.ServiceCollectionExtensions.ConfigureUi(Microsoft.Extensions.DependencyInjection.IServiceCollection)" /> will do exactly what it says on the tin...this time around, this is for the UI
            </summary>
            <param name="services">
                An instance of the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> interface that will be configured with the Global Exception
                Handler, and the controllers (a UI isn't much use without them...)
            </param>
            <returns>
                The original <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to facilitate method chaining
            </returns>
            <seealso href="AddApiConfiguration">
            </seealso>
        </member>
        <member name="M:AStar.Dev.AspNet.Extensions.ServiceCollectionExtensions.ServiceCollectionExtensions.AddApiConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.ConfigurationManager)">
            <summary>
                The <see cref="M:AStar.Dev.AspNet.Extensions.ServiceCollectionExtensions.ServiceCollectionExtensions.AddApiConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.ConfigurationManager)" /> will do exactly what it says on the tin...this time around, this is for the API
            </summary>
            <param name="services">
                An instance of the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> interface that will be configured with the Global Exception
                Handler, and the controllers (a UI isn't much use without them...)
            </param>
            <param name="configurationManager">
                An instance of the <see cref="T:Microsoft.Extensions.Configuration.ConfigurationManager" /> used during API Configuration
            </param>
            <returns>
                The original <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to facilitate method chaining
            </returns>
            <seealso href="ConfigureUi">
            </seealso>
        </member>
        <member name="T:AStar.Dev.AspNet.Extensions.Swagger.ConfigureSwaggerOptions">
            <summary>
                Configures the Swagger generation options
            </summary>
            <remarks>
                This allows API versioning to define a Swagger document per API version after the
                <see cref="T:Asp.Versioning.ApiExplorer.IApiVersionDescriptionProvider" /> service has been resolved from the service container
            </remarks>
            <remarks>
                Initializes a new instance of the <see cref="T:AStar.Dev.AspNet.Extensions.Swagger.ConfigureSwaggerOptions" /> class
            </remarks>
            <param name="provider">
                The <see cref="T:Asp.Versioning.ApiExplorer.IApiVersionDescriptionProvider">provider</see> used to generate Swagger
                documents
            </param>
            <param name="apiConfiguration">
                The configured instance of <see cref="T:Microsoft.Extensions.Options.IOptions`1" /> to complete the Swagger configuration
            </param>
        </member>
        <member name="M:AStar.Dev.AspNet.Extensions.Swagger.ConfigureSwaggerOptions.#ctor(Asp.Versioning.ApiExplorer.IApiVersionDescriptionProvider,Microsoft.Extensions.Options.IOptions{AStar.Dev.AspNet.Extensions.ApiConfiguration})">
            <summary>
                Configures the Swagger generation options
            </summary>
            <remarks>
                This allows API versioning to define a Swagger document per API version after the
                <see cref="T:Asp.Versioning.ApiExplorer.IApiVersionDescriptionProvider" /> service has been resolved from the service container
            </remarks>
            <remarks>
                Initializes a new instance of the <see cref="T:AStar.Dev.AspNet.Extensions.Swagger.ConfigureSwaggerOptions" /> class
            </remarks>
            <param name="provider">
                The <see cref="T:Asp.Versioning.ApiExplorer.IApiVersionDescriptionProvider">provider</see> used to generate Swagger
                documents
            </param>
            <param name="apiConfiguration">
                The configured instance of <see cref="T:Microsoft.Extensions.Options.IOptions`1" /> to complete the Swagger configuration
            </param>
        </member>
        <member name="M:AStar.Dev.AspNet.Extensions.Swagger.ConfigureSwaggerOptions.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <inheritdoc />
        </member>
        <member name="T:AStar.Dev.AspNet.Extensions.WebApplicationBuilderExtensions.WebApplicationBuilderExtensions">
            <summary>
                The <see href=""></see> class containing applicable extensions for the <see href="WebApplicationBuilder"></see>
                class
            </summary>
        </member>
        <member name="M:AStar.Dev.AspNet.Extensions.WebApplicationBuilderExtensions.WebApplicationBuilderExtensions.DisableServerHeader(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
                This method will, unsurprisingly, disable the "Server" Header for all responses from the Kestrel Server
            </summary>
            <param name="builder">
                The instance of <see href="WebApplicationBuilder"></see> to configure
            </param>
            <returns>
                The original instance of the <see href="WebApplicationBuilder"></see> to facilitate method chaining (AKA fluent
                configuration)
            </returns>
        </member>
    </members>
</doc>
