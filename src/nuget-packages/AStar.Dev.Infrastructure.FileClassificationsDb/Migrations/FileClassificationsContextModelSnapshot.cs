// <auto-generated />
using AStar.Dev.Infrastructure.FileClassificationsDb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AStar.Dev.Infrastructure.FileClassificationsDb.Migrations
{
    [DbContext(typeof(FileClassificationsContext))]
    partial class FileClassificationsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("fileClassifications")
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AStar.Dev.Infrastructure.FileClassificationsDb.Models.FileDetailClassification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("FileDetailClassification", "fileClassifications");
                });

            modelBuilder.Entity("AStar.Dev.Infrastructure.FileClassificationsDb.Models.FileToFileClassificationMapping", b =>
                {
                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.Property<int>("ClassificationId")
                        .HasColumnType("int");

                    b.HasKey("FileId", "ClassificationId");

                    b.ToTable("FileToFileClassificationMapping", "fileClassifications");
                });
#pragma warning restore 612, 618
        }
    }
}
